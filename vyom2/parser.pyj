# -*- coding: utf-8 -*-

from vyom2 import Exception


def get_data_type(elem):
    # TODO: not every browser has .dataset
    return jQuery(elem).data("type")
    # return elem.attributes["data-type"]
    # if not elem:
    #     return None
    # if not elem.dataset:
    #     return None
    # dtype = elem.dataset.type
    # for _ in range(10):
    #     if not dtype and elem.tagName == "TR":
    #         dtype = elem.dataset.type
    # return dtype


def get_data_args(elem):
    # TODO: not every browser has .dataset
    args = elem.dataset.args
    if args:
        args = "({" + args + "})"
        args = eval(args)
    else:
        args = {}
    return args


def get_ctor(name):
    last_dot = name.lastIndexOf(".")

    if last_dot == -1:
        return _$rapyd$_modules[name]

    mod = name.substring(0, last_dot)
    obj = name.substring(last_dot+1, name.length)
    mod = _$rapyd$_modules[mod]

    if not mod:
        return None

    return mod[obj]


class UnknownWidget(Exception):
    pass


class NotASlot(Exception):
    pass


BYID = {}
BYELEM = {}
CUR_ID = 1


def parse(node=None):
    nonlocal CUR_ID

    if node is None:
        node = document.body

    for elem in Array.prototype.slice.call(
        node.getElementsByTagName('*')
    ):
        dtype = get_data_type(elem)
        if not dtype:
            continue
        ctor = get_ctor(dtype)
        if not ctor:
            raise UnknownWidget(dtype + " is not a widget class")
        args = get_data_args(elem)
        auto_id = False
        if not elem.id:
            auto_id = True
            elem.id = "rid_" + CUR_ID
            CUR_ID += 1
        instance = new ctor(elem, args)
        BYID[elem.id] = instance
        BYELEM[elem] = instance
        window[elem.id] = instance


def by_id(nid):
    return BYID[nid]


def by_node(node):
    return BYELEM[node]
